package ${controller.packageName};

<% for(import in controller.imports!){ %>
import ${import};
<% } %>

import ${context.basePackage}.domain.${context.domainBigName};
import ${context.basePackage}.repository.${context.domainBigName}Repository;
import ${context.basePackage}.service.I${context.domainBigName}Service;

/**
 * ${context.bizChName}控制器
 *
 * @author liangchangchun
 * @Date ${tool.currentTime()}
 */
@Controller
@RequestMapping("/${context.bizEnName}")
public class ${context.bizEnBigName}Controller extends BaseController {

    private String PREFIX = "/system/${context.bizEnName}/";
    
    @Resource
    ${context.bizEnBigName}Repository ${context.bizEnName}Repository;
    
    @Resource
    I${context.bizEnBigName}Service ${context.bizEnName}Service;

    /**
     * 跳转到${context.bizChName}首页
     */
    @RequestMapping("")
    public String index() {
        return PREFIX + "${context.bizEnName}.html";
    }

    /**
     * 跳转到添加${context.bizChName}
     */
    @RequestMapping("/${context.bizEnName}_add")
    public String ${context.bizEnName}Add() {
        return PREFIX + "${context.bizEnName}_add.html";
    }

    /**
     * 跳转到修改${context.bizChName}
     */
    @RequestMapping("/${context.bizEnName}_update/{${context.domainName}Id}")
    public String ${context.bizEnName}Update(@PathVariable Integer ${context.domainName}Id, Model model) {
     	if (ToolUtil.isEmpty(${context.domainName}Id)) {
               throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
           }
    	${context.domainBigName} ${context.domainName}  = ${context.bizEnName}Repository.findBy${context.domainName}Id(${context.domainName}Id);
    	Map<String, Object> map = BeanKit.beanToMap(${context.domainName});
    	model.addAttribute("${context.domainName}", map);
        return PREFIX + "${context.bizEnName}_edit.html";
    }

    /**
     * 获取${context.bizChName}列表
     */
    @RequestMapping(value = "/list")
    @ResponseBody
    public Object list(String condition) {
    	List<${context.domainBigName}> list = this.${context.bizEnName}Service.list(condition);
        return list;
    }

    /**
     * 新增${context.bizChName}
     */
    @RequestMapping(value = "/add")
    @ResponseBody
    public Object add(@Valid ${context.domainBigName}  ${context.domainName}, BindingResult result) {
     	if (result.hasErrors()) {
             throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
         }
    	 ${context.domainName}.setCreatetime(new Date());
    	 ${context.domainName}.setUpdatetime(new Date());
    	 ${context.bizEnName}Repository.save(${context.domainName});
        return super.SUCCESS_TIP;
    }

    /**
     * 删除${context.bizChName}
     */
    @RequestMapping(value = "/delete")
    @ResponseBody
    public Object delete(@RequestParam Integer ${context.domainName}Id) {
    	if (ToolUtil.isEmpty(${context.domainName}Id)) {
             throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
         }
    	 ${context.bizEnName}Repository.delete(${context.domainName}Id);
        return SUCCESS_TIP;
    }


    /**
     * 修改${context.bizChName}
     */
    @RequestMapping(value = "/update")
    @ResponseBody
    public Object update(@Valid ${context.domainBigName}  ${context.domainName}, BindingResult result) {
    	if (result.hasErrors()) {
            throw new BussinessException(BizExceptionEnum.REQUEST_NULL);
        }
    	${context.domainBigName} old = ${context.bizEnName}Repository.findBy${context.bizEnName}Id(${context.domainName}.get${context.domainBigName}Id());
    	${context.domainName}.setCreatetime(old.getCreatetime());
    	${context.domainName}.setUpdatetime(new Date());
    	${context.bizEnName}Repository.save(${context.domainName});
        return super.SUCCESS_TIP;
    }

    /**
     * ${context.bizChName}详情
     */
    @RequestMapping(value = "/detail")
    @ResponseBody
    public Object detail() {
        return null;
    }
}
